<?xml version="1.0" ?>
<SmellBaseline>
  <ManuallySuppressedIssues></ManuallySuppressedIssues>
  <CurrentIssues>
    <ID>CyclomaticComplexMethod:CreateAssignmentState.kt$CreateAssignmentState$private suspend fun queryProblemsDescriptions( bot: BehaviourContext, state: CreateAssignmentState, ): List&lt;ProblemDescription&gt;?</ID>
    <ID>CyclomaticComplexMethod:MenuState.kt$MenuState$override suspend fun readUserInput(bot: BehaviourContext, service: Unit): State</ID>
    <ID>ForbiddenComment:EditDescriptionState.kt$EditDescriptionState$// course.name = answer TODO: implement this feature</ID>
    <ID>FunctionOnlyReturningConstant:Dialogues.kt$Dialogues$fun askCourse(): String</ID>
    <ID>FunctionOnlyReturningConstant:Dialogues.kt$Dialogues$fun assignmentDescriptionIsNotText(): String</ID>
    <ID>FunctionOnlyReturningConstant:Dialogues.kt$Dialogues$fun assignmentWasCreatedSuccessfully(): String</ID>
    <ID>FunctionOnlyReturningConstant:Dialogues.kt$Dialogues$fun devAskForId(): String</ID>
    <ID>FunctionOnlyReturningConstant:Dialogues.kt$Dialogues$fun devIdNotFound(): String</ID>
    <ID>FunctionOnlyReturningConstant:Dialogues.kt$Dialogues$fun incorrectProblemDescriptionEmpty(): String</ID>
    <ID>FunctionOnlyReturningConstant:Dialogues.kt$Dialogues$fun menu(): String</ID>
    <ID>FunctionOnlyReturningConstant:Dialogues.kt$Dialogues$fun noCoursesWasFound(): String</ID>
    <ID>FunctionOnlyReturningConstant:Dialogues.kt$Dialogues$fun noCoursesWasFoundForCreationOfAssignment(): String</ID>
    <ID>FunctionOnlyReturningConstant:Dialogues.kt$Dialogues$fun noIdInInput(): String</ID>
    <ID>FunctionOnlyReturningConstant:Dialogues.kt$Dialogues$fun problemsDescriptionsAreNotTexts(): String</ID>
    <ID>InjectDispatcher:AdminRun.kt$IO</ID>
    <ID>LongMethod:AddScheduledMessageState.kt$private fun keyboardWithDates(): InlineKeyboardMarkup</ID>
    <ID>LongMethod:AdminRun.kt$@OptIn(RiskFeature::class) suspend fun adminRun( botToken: String, coursesDistributor: CoursesDistributor, assignmentStorage: AssignmentStorage, problemStorage: ProblemStorage, solutionDistributor: SolutionDistributor, teacherStorage: TeacherStorage, core: AdminCore, )</ID>
    <ID>LongMethod:CreateAssignmentState.kt$CreateAssignmentState$@OptIn(ExperimentalCoroutinesApi::class) private suspend fun queryAssignmentDescription( bot: BehaviourContext, state: CreateAssignmentState, ): Pair&lt;String, LocalDateTime?&gt;?</ID>
    <ID>LongMethod:CreateAssignmentState.kt$CreateAssignmentState$private suspend fun queryProblemsDescriptions( bot: BehaviourContext, state: CreateAssignmentState, ): List&lt;ProblemDescription&gt;?</ID>
    <ID>LongMethod:Main.kt$suspend fun main(vararg args: String)</ID>
    <ID>LongParameterList:AdminRun.kt$( botToken: String, coursesDistributor: CoursesDistributor, assignmentStorage: AssignmentStorage, problemStorage: ProblemStorage, solutionDistributor: SolutionDistributor, teacherStorage: TeacherStorage, core: AdminCore, )</ID>
    <ID>LoopWithTooManyJumpStatements:AddStudentState.kt$while</ID>
    <ID>LoopWithTooManyJumpStatements:AddTeacherState.kt$while</ID>
    <ID>LoopWithTooManyJumpStatements:CreateAssignmentState.kt$CreateAssignmentState$while</ID>
    <ID>LoopWithTooManyJumpStatements:RemoveStudentState.kt$while</ID>
    <ID>LoopWithTooManyJumpStatements:RemoveTeacherState.kt$while</ID>
    <ID>MagicNumber:AddScheduledMessageState.kt$3</ID>
    <ID>MagicNumber:AddScheduledMessageState.kt$4</ID>
    <ID>MagicNumber:AddScheduledMessageState.kt$5</ID>
    <ID>MagicNumber:AddScheduledMessageState.kt$6</ID>
    <ID>MagicNumber:CreateAssignmentState.kt$3</ID>
    <ID>MagicNumber:DateTime.kt$3</ID>
    <ID>MagicNumber:DateTime.kt$4</ID>
    <ID>MagicNumber:DateTime.kt$5</ID>
    <ID>MagicNumber:DateTime.kt$6</ID>
    <ID>MaxLineLength:AddTeacherState.kt$+"Введите ID преподавателей (через запятую), которых хотите добавить на курс ${state.courseName}, или отправьте /stop, чтобы отменить операцию."</ID>
    <ID>MaxLineLength:Dialogues.kt$Dialogues$"Некорректный формат ввода (обнаружена строчка ($problemDescription) с более, чем 3-мя аргументами). Попробуйте ещё раз!"</ID>
    <ID>MaxLineLength:RemoveStudentState.kt$+"Введите ID учеников (через запятую), которых хотите убрать с курса ${state.courseName}, или отправьте /stop, чтобы отменить операцию."</ID>
    <ID>MaxLineLength:RemoveTeacherState.kt$+"Введите ID преподавателей (через запятую), которых хотите убрать с курса ${state.courseName}, или отправьте /stop, чтобы отменить операцию."</ID>
    <ID>NestedBlockDepth:CreateAssignmentState.kt$CreateAssignmentState$@OptIn(ExperimentalCoroutinesApi::class) private suspend fun queryAssignmentDescription( bot: BehaviourContext, state: CreateAssignmentState, ): Pair&lt;String, LocalDateTime?&gt;?</ID>
    <ID>NestedBlockDepth:CreateAssignmentState.kt$CreateAssignmentState$private suspend fun queryProblemsDescriptions( bot: BehaviourContext, state: CreateAssignmentState, ): List&lt;ProblemDescription&gt;?</ID>
    <ID>ReturnCount:AddScheduledMessageState.kt$private suspend fun BehaviourContext.queryDateFromUser( state: AddScheduledMessageState ): LocalDate?</ID>
    <ID>ReturnCount:CreateAssignmentState.kt$CreateAssignmentState$@OptIn(ExperimentalCoroutinesApi::class) private suspend fun queryAssignmentDescription( bot: BehaviourContext, state: CreateAssignmentState, ): Pair&lt;String, LocalDateTime?&gt;?</ID>
    <ID>ReturnCount:CreateAssignmentState.kt$fun parseProblemsDescriptions( problemsDescriptionsFromText: String ): Result&lt;List&lt;ProblemDescription&gt;, String&gt;</ID>
    <ID>TooManyFunctions:AdminCore.kt$AdminCore</ID>
    <ID>TooManyFunctions:Dialogues.kt$Dialogues</ID>
    <ID>UnsafeCallOnNullableType:AdminRun.kt$it.from!!</ID>
    <ID>UseAnyOrNoneInsteadOfFind:AdminCore.kt$AdminCore$find { it.id == course.id }</ID>
  </CurrentIssues>
</SmellBaseline>
